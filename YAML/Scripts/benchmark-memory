#!/usr/bin/env bash

data_directory=benchmarks/data
build_directory=build/linux
result_directory=results
ms_print_output="$result_directory/ms_print.txt"
summary_output="$result_directory/memory.csv"

files=($(find "$data_directory" -type f))
plugins=(yamlcpp yanlr yambi yawn yaypeg)

cleanup() {
	find "$data_directory" -mindepth 2 -delete
	find "$data_directory" -mindepth 1 -type d -delete
}

generate_input() {
	input_file="$1"
	directory="$data_directory/$(printf '%s' "$input_file" | cut -f1 -d'.')"
	mkdir -p "$directory"
	(
		for plugin in "${plugins[@]}"; do
			cp "$data_directory/$input_file" "$directory/test.$plugin.in"
		done
	)
}

benchmark() {
	mkdir -p "$result_directory"
	printf '%s;%s;%s\n' Plugin File Bytes > "$summary_output"
	for plugin in ${plugins[@]}; do
		printf '\n——————————\n%s\n——————————\n\n' $plugin
		for file in ${files[@]}; do
			name="$(basename "$file" | cut -f1 -d'.')"
			printf 'Check memory usage for file %s\n' "$file"
			generate_input "$name.yaml"
			valgrind --tool=massif \
			--massif-out-file="$result_directory/$name.$plugin.out" \
				"$build_directory/bin/benchmark_plugingetset" \
				"benchmarks/data/$name" user "$plugin" get
			ms_print "$result_directory/$name.$plugin.out" > "$ms_print_output"
			peak="$(grep 'Detailed snapshots: ' "$ms_print_output" |
				sed -E 's/.*[ ,]([0-9]+) \(peak\).*/\1/')"
			bytes="$(grep -E "^ $peak" "$ms_print_output" |
				awk -F '  +' '{print $2}' | tr -d ',')"
			rm "$ms_print_output"
			printf '%s;%s;%s\n' "$plugin" "$name.yaml" "$bytes" >> "$summary_output"
		done
	done
}

trap cleanup EXIT INT QUIT TERM

benchmark
